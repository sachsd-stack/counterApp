{"version":3,"sources":["components/Increment.js","components/Decrement.js","components/Custom.js","App.js","reportWebVitals.js","index.js"],"names":["Increment","props","increment","className","onClick","Decrement","decrement","Custom","state","count","handleChange","e","setState","target","value","handleSubmit","preventDefault","customArithmetic","onSubmit","this","type","onChange","placeholder","Component","App","parseInt","reset","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAWeA,EATG,SAACC,GAAW,IACnBC,EAAaD,EAAbC,UACP,OACI,8BACI,wBAAQC,UAAU,WAAWC,QAASF,EAAtC,mBCKGG,EATG,SAACJ,GAAW,IACnBK,EAAaL,EAAbK,UACP,OACI,8BACI,wBAAQH,UAAU,WAAWC,QAASE,EAAtC,mBC0BGC,E,4MA7BXC,MAAM,CACFC,MAAO,I,EAGXC,aAAe,SAACC,GACZ,EAAKC,SAAS,CACVH,MAAOE,EAAEE,OAAOC,S,EAItBC,aAAe,SAACJ,GACdA,EAAEK,iBACF,EAAKf,MAAMgB,iBAAiB,EAAKT,MAAMC,OACvC,EAAKG,SAAS,CACVH,MAAO,M,uDAIX,OACI,8BACI,uBAAMS,SAAUC,KAAKJ,aAArB,UACI,uBAAOK,KAAK,SAASjB,UAAU,mBAAmBkB,SAAUF,KAAKF,iBAAkBK,YAAY,sCAC/F,wBAAQF,KAAK,SAAb,6B,GAvBCG,aCiDNC,E,4MA7CXhB,MAAQ,CACNC,MAAO,G,EAGXP,UAAY,WACV,EAAKU,SAAS,CACZH,MAAO,EAAKD,MAAMC,MAAQ,K,EAI9BH,UAAY,WACV,EAAKM,SAAS,CACZH,MAAO,EAAKD,MAAMC,MAAQ,K,EAU9BQ,iBAAmB,SAACN,GAClB,EAAKC,SAAS,CACVH,MAAO,EAAKD,MAAMC,MAAQgB,SAASd,M,sDAPvCQ,KAAKP,SAAS,CACZH,MAAO,M,+BAWT,OACE,sBAAKN,UAAU,MAAf,UACE,oBAAIA,UAAU,SAAd,SAAwBgB,KAAKX,MAAMC,QACnC,sBAAKN,UAAU,SAAf,UACE,cAAC,EAAD,CAAWD,UAAWiB,KAAKjB,YAC3B,cAAC,EAAD,CAAWI,UAAWa,KAAKb,YAC3B,wBAAQH,UAAU,QAAQC,QAASe,KAAKO,MAAxC,sBAEF,qBAAKvB,UAAU,SAAf,SACE,cAAC,EAAD,CAAQc,iBAAkBE,KAAKF,4B,GAvCvBM,aCOHI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3298b615.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Increment = (props) => {\r\n    const {increment} = props\r\n    return (\r\n        <div>\r\n            <button className=\"minusOne\" onClick={increment}>+1</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Increment\r\n","import React from 'react'\r\n\r\nconst Decrement = (props) => {\r\n    const {decrement} = props\r\n    return (\r\n        <div>\r\n            <button className=\"minusOne\" onClick={decrement}>-1</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Decrement\r\n","import React, {Component} from 'react'\r\n\r\nclass Custom extends Component {\r\n    state={\r\n        count: ''\r\n    }\r\n\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            count: e.target.value\r\n        })\r\n    }\r\n    \r\n      handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.customArithmetic(this.state.count)\r\n        this.setState({\r\n            count: ''\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input type=\"number\" className=\"center calculate\" onChange={this.customArithmetic} placeholder=\"Input a number to add or subtract\"/>\r\n                    <button type=\"submit\">Submit</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Custom\r\n\r\n","import React, { Component } from 'react'\nimport Increment from './components/Increment'\nimport Decrement from './components/Decrement'\nimport Custom from './components/Custom'\n\nclass App extends Component {\n    state = {\n      count: 0\n    }\n\n  increment = () =>{\n    this.setState({\n      count: this.state.count + 1\n    });\n  }\n\n  decrement = () =>{\n    this.setState({\n      count: this.state.count - 1\n    });\n  }\n\n  reset(){\n    this.setState({\n      count: 0\n    });\n  }\n\n  customArithmetic = (e) => {\n    this.setState({\n        count: this.state.count + parseInt(e)\n    });\n}\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"center\">{this.state.count}</h1>\n        <div className=\"center\">\n          <Increment increment={this.increment}/>\n          <Decrement decrement={this.decrement}/>\n          <button className='reset' onClick={this.reset}>Reset</button>\n        </div>\n        <div className=\"center\">\n          <Custom customArithmetic={this.customArithmetic}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
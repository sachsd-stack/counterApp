{"version":3,"sources":["components/Increment.js","components/Decrement.js","components/Custom.js","components/Multiplier.js","App.js","reportWebVitals.js","index.js"],"names":["Increment","props","increment","className","onClick","Decrement","decrement","Custom","state","count","handleChange","e","setState","target","value","handleSubmit","console","log","preventDefault","custom","onSubmit","this","type","onChange","placeholder","Component","Multiplier","handleMultiplier","multiplier","App","multiply","reset","number","parseInt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNASeA,EAPG,SAACC,GAAW,IACnBC,EAAaD,EAAbC,UACP,OACI,wBAAQC,UAAU,UAAUC,QAASF,EAArC,iBCIOG,EAPG,SAACJ,GAAW,IACnBK,EAAaL,EAAbK,UACP,OACI,wBAAQH,UAAU,WAAWC,QAASE,EAAtC,iBC8BOC,E,4MAhCXC,MAAM,CACFC,MAAO,I,EAGXC,aAAe,SAACC,GACZ,EAAKC,SAAS,CACVH,MAAOE,EAAEE,OAAOC,S,EAItBC,aAAe,SAACJ,GACZK,QAAQC,IAAI,EAAKhB,OACnBU,EAAEO,iBACF,EAAKjB,MAAMkB,OAAO,EAAKX,MAAMC,OAC7B,EAAKG,SAAS,CACVH,MAAO,M,uDAMX,OACI,8BACI,uBAAMW,SAAUC,KAAKN,aAArB,UACI,uBAAOO,KAAK,OAAOnB,UAAU,mBAAmBoB,SAAUF,KAAKX,aAAcI,MAAOO,KAAKb,MAAMC,MAAOe,YAAY,sCAClH,8BAAK,uD,GA1BJC,aC+BNC,E,4MA/BXlB,MAAM,CACFC,MAAO,I,EAEXC,aAAe,SAACC,GACZ,EAAKC,SAAS,CACVH,MAAOE,EAAEE,OAAOC,S,EAGxBa,iBAAmB,SAAChB,GAChB,EAAKC,SAAS,CACVH,MAAO,EAAKR,MAAM2B,WAAWjB,EAAEE,OAAOC,U,EAG5CC,aAAe,SAACJ,GACdK,QAAQC,IAAI,EAAKhB,OACjBU,EAAEO,iBACF,EAAKjB,MAAM2B,WAAW,EAAKpB,MAAMC,OACjC,EAAKG,SAAS,CACVH,MAAOE,EAAEE,OAAOC,S,uDAIpB,OACI,8BACI,sBAAMM,SAAUC,KAAKN,aAAcQ,SAAUF,KAAKM,iBAAlD,SACI,uBAAOL,KAAK,OAAOnB,UAAU,oBAAoBoB,SAAUF,KAAKX,aAAcI,MAAOO,KAAKb,MAAMC,MAAOe,YAAY,0C,GA1B9GC,aCsEVI,E,4MAhEXrB,MAAQ,CACNC,MAAO,EACPqB,SAAU,G,EAGd5B,UAAY,WACV,EAAKU,SAAS,CACZH,MAAM,EAAKD,MAAMC,MAAQ,K,EAI7BH,UAAY,WACV,EAAKM,SAAS,CACZH,MAAO,EAAKD,MAAMC,MAAQ,K,EAI9BsB,MAAQ,WACN,EAAKnB,SAAS,CACZH,MAAO,K,EAIXU,OAAS,SAACa,GACR,IAAIlB,EAAQmB,SAASD,GACrB,EAAKpB,SAAS,CACVH,MAAM,EAAKD,MAAMC,MAAQK,K,EAU/Bc,WAAa,SAACI,GACE,MAAXA,GACD,EAAKpB,SAAS,CACZH,MAAO,EAAKD,MAAMC,MAAQuB,K,uDAM9B,OACE,sBAAK7B,UAAU,MAAf,UACE,oBAAIA,UAAU,SAAd,SAAwBkB,KAAKb,MAAMC,QACnC,sBAAKN,UAAU,SAAf,UACE,cAAC,EAAD,CAAYyB,WAAYP,KAAKO,aAC7B,cAAC,EAAD,CAAW1B,UAAWmB,KAAKnB,YAC3B,cAAC,EAAD,CAAWI,UAAWe,KAAKf,YAC3B,8BACE,wBAAQH,UAAU,QAAQC,QAASiB,KAAKU,MAAxC,wBAGJ,qBAAK5B,UAAU,SAAf,SACE,cAAC,EAAD,CAAQgB,OAAQE,KAAKF,kB,GA1DbM,aCMHS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d5c2bf0e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Increment = (props) => {\r\n    const {increment} = props\r\n    return (\r\n        <button className=\"plusOne\" onClick={increment}>+1</button>\r\n    )\r\n}\r\n\r\nexport default Increment\r\n","import React from 'react'\r\n\r\nconst Decrement = (props) => {\r\n    const {decrement} = props\r\n    return (\r\n        <button className=\"minusOne\" onClick={decrement}>-1</button>\r\n    )\r\n}\r\n\r\nexport default Decrement\r\n","import React, {Component} from 'react'\r\n\r\nclass Custom extends Component {\r\n    state={\r\n        count: ''\r\n    }\r\n\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            count: e.target.value\r\n        })\r\n    }\r\n    \r\n      handleSubmit = (e) => {\r\n          console.log(this.props)\r\n        e.preventDefault();\r\n        this.props.custom(this.state.count)\r\n        this.setState({\r\n            count: ''\r\n        });\r\n    }\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input type=\"text\" className=\"center calculate\" onChange={this.handleChange} value={this.state.count} placeholder=\"Input a number to add or subtract\"/>\r\n                    <div><button>Submit</button></div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Custom\r\n\r\n","import React, {Component} from 'react'\r\nclass Multiplier extends Component {\r\n    state={\r\n        count: ''\r\n    }\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            count: e.target.value \r\n        })\r\n    }\r\n    handleMultiplier = (e) =>{\r\n        this.setState({\r\n            count: this.props.multiplier(e.target.value)\r\n        })\r\n    }\r\n      handleSubmit = (e) => {\r\n        console.log(this.props)\r\n        e.preventDefault();\r\n        this.props.multiplier(this.state.count)\r\n        this.setState({\r\n            count: e.target.value\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit} onChange={this.handleMultiplier}>\r\n                    <input type=\"text\" className=\"center multiplier\" onChange={this.handleChange} value={this.state.count} placeholder=\"Input a number to multiply by\"/>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Multiplier","import React, { Component } from 'react'\nimport Increment from './components/Increment'\nimport Decrement from './components/Decrement'\nimport Custom from './components/Custom'\nimport Multiplier from './components/Multiplier'\n\nclass App extends Component {\n    state = {\n      count: 1,\n      multiply: 1\n    }\n\n  increment = () =>{\n    this.setState({\n      count:this.state.count + 1\n    });\n  }\n\n  decrement = () =>{\n    this.setState({\n      count: this.state.count - 1\n    });\n  }\n\n  reset = () =>{\n    this.setState({\n      count: 1\n    });\n  }\n\n  custom = (number) => {\n    let value = parseInt(number)\n    this.setState({\n        count:this.state.count + value\n    });\n  }\n\n//   handleChange = (number) =>{\n//     this.setState({\n//         multiply: number.target.value\n//     })\n// }\n\n  multiplier = (number) => {\n    if(number !== '-') {\n      this.setState({\n        count: this.state.count * number\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"center\">{this.state.count}</h1>\n        <div className=\"center\">\n          <Multiplier multiplier={this.multiplier}/>\n          <Increment increment={this.increment}/>\n          <Decrement decrement={this.decrement}/>\n          <div>\n            <button className='reset' onClick={this.reset}>Reset</button>\n          </div>\n        </div>\n        <div className=\"center\">\n          <Custom custom={this.custom}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}